generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider     = "postgres"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum NEWS_STATUS {
  HIDDEN
  VISIBLE
}

enum SOURCE_PERIOD {
  DAILY
  HOURLY
}

model User {
  id String @id @default(uuid())

  email    String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model News {
  id String @id @default(uuid())

  title       String
  description String
  tags        TagsOnNews[]
  status      NEWS_STATUS  @default(VISIBLE)
  isDraft     Boolean      @default(false)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Tag {
  id String @id @default(uuid())

  name String
  news TagsOnNews[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TagsOnNews {
  news   News   @relation(fields: [newsId], references: [id])
  newsId String
  tag    Tag    @relation(fields: [tagId], references: [id])
  tagId  String

  assignedAt DateTime @default(now())

  @@id([newsId, tagId])
  @@index([tagId])
}

model Source {
  id String @id @default(uuid())

  url         String
  name        String
  periodicity SOURCE_PERIOD
  isActive    Boolean       @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
